apiVersion: v1
kind: Service
metadata:
  name: service-d
  labels:
    app: service-d
    component: service
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: service-d
    component: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-d
  labels:
    app: service-d
    component: service
    version: v1
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: service-d
      component: service
      version: v1
  template:
    metadata:
      labels:
        app: service-d
        component: service
        version: v1
    spec:
      containers:
        - name: service-d
          image: {{ .Values.image.repository }}/go-srv-d:{{ .Values.image.tag.ServiceD }}
          resources:
            requests:
              memory: 150Mi
              cpu: 250m
            limits:
              memory: 400Mi
              cpu: 600m
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          env:
            - name: LOG_LEVEL
              value: debug
            - name: RABBITMQ_CONN
              valueFrom:
                secretKeyRef:
                  name: go-srv-config
                  key: rabbitmq.conn
          ports:
            - containerPort: 8080
          imagePullPolicy: {{ .Values.image.pullPolicy }}
